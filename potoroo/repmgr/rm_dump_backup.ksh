#!/usr/bin/env ksh
# ======================================================================== v1.0/0a157 
#                                                         
#       This software is part of the AT&T Ningaui distribution 
#	
#       Copyright (c) 2001-2009 by AT&T Intellectual Property. All rights reserved
#	AT&T and the AT&T logo are trademarks of AT&T Intellectual Property.
#	
#       Ningaui software is licensed under the Common Public
#       License, Version 1.0  by AT&T Intellectual Property.
#                                                                      
#       A copy of the License is available at    
#       http://www.opensource.org/licenses/cpl1.0.txt             
#                                                                      
#       Information and Software Systems Research               
#       AT&T Labs 
#       Florham Park, NJ                            
#	
#	Send questions, comments via email to ningaui_support@research.att.com.
#	
#                                                                      
# ======================================================================== 0a229


#!/usr/bin/env ksh
# Mnemonic:	rm_dump_backup
# Abstract:	save a copy of rm's dump file with a tumbler of 24,30.  Having 
#		the dump file hanging round should help with debugging and such.
#		
# Date:		28 July 2006
# Author:	E. Scott Daniels
# ---------------------------------------------------------------------------------
CARTULARY=${NG_CARTULARY:-$NG_ROOT/cartulary}     # get standard configuration file
. $CARTULARY

STDFUN=${NG_STDFUN:-$NG_ROOT/lib/stdfun}  # get standard functions
. $STDFUN



# -------------------------------------------------------------------
peek=0

while [[ $1 == -* ]]
do
	case $1 in 
		-p)	peek=1;;

		-v)	vflag="$vflag-v "; verbose=1;;
		--man)	show_man; cleanup 1;;
		-\?)	usage; cleanup 1;;
		-*)	error_msg "unrecognised option: $1"
			usage;
			cleanup 1
			;;
	esac

	shift
done

if (( $peek > 0 ))
then
	fn=$( ng_tumbler -p NG_RM_DUMP_TUMBLER )
	if [[ -z $fn ]]
	then
		log_msg "no NG_RM_DUMP_TUMBLER information could be found in pinkpages"
		cleanup 1
	fi
	log_msg "last backup saved with the basename of: ${fn##*/}"
	if (( $verbose ))
	then
		ng_rm_where -p -n ${fn##*/}
	fi
	cleanup 0
fi

mynode=$(ng_sysname)
if [[ $mynode != $srv_Filer ]]
then
	log_msg "${argv0##*/} must be executed on the filer node ($srv_Filer); $mynode is not the Filer"
	cleanup 1
fi

ng_ppget NG_RM_DUMP_TUMBLER|read stuff
if [[ -z $stuff ]]
then
	ng_rm_where -p -n rmdump.*cpt | wc -l |read count		# if no var and files exist, we panic as there should have been a var
	if (( $count > 0 ))
	then
		log_msg "abort: unable to find NG_RM_DUMP_TUMBLER in pinkpages"
		cleanup 1
	fi

	ng_ppset NG_RM_DUMP_TUMBLER="rmdump,cpt,0,30,0,24"		# no files and no var, initialise for 24 hourly and 1 daily keeper
	verbose "set NG_RM_DUMP_TUMBLER in pinkpages"
fi

fn=$( ng_tumbler NG_RM_DUMP_TUMBLER )
if [[ -z $fn ]]
then
	log_msg "no filename from ng_tumbler; small pause and one retry"
	sleep 20s
	fn=$( ng_tumbler NG_RM_DUMP_TUMBLER )
fi

if [[ -z $fn ]]
then
	log_msg "abort: unable to get a filename from ng_tumbler"
	ng_log $PRI_ERROR $argv0 "backup not created: unable to get a filename from ng_tumbler"
	cleanup 1
fi

fn=$fn.gz!					# add on the dont trash me flag (!); register will remove
verbose "creating dump in: $fn"

if ! gzip -c <$NG_ROOT/site/rm/dump >$fn
then
	log_msg "unable to compress $NG_ROOT/site/rm/dump int $fn"
	cleanup 1
fi

verbose "registering file: $fn"
if ! ng_rm_register $vflag $fn
then
	ng_log $PRI_WARN $argv0 "unable to register the dump backup file: $fn"
	log_msg "unable to register file: $fn"
	cleanup 1
fi

ng_log $PRI_INFO $argv0 "dump backup created in: $fn"


cleanup 0



/* ---------- SCD: Self Contained Documentation ------------------- 
&scd_start
&doc_title(ng_rm_dump_backup:Creates a backup of the repmgr dump file)

&space
&synop	ng_rm_dump_backup [-p] [-v] 

&space
&desc	&This script will create a backup of the replication manager dump file
	and register it in the replication manager file space.  The backups
	are created using filenames generated by &lit(ng_tumbler) via the 
	pinkpages variable &lit(NG_RM_DUMP_TUMBLER).  The default value 
	for the tumber is 24x30 such that 24 hourly backups are kept and 
	one daily is kept for 30 days. 

&space
&opts	The following options are recognised by &this when placed on the command line:
&begterms
&term	-p : Peek; displays the filename of the last file created (based on the current
	tumbler variable setting). With the peek option this command can be 
	run on any node; without it the command must be run on the filer. 
&space
&term	-v : Verbose mode. 
&endterms


&space
&exit	Exits with a non-zero return code if an error is detected.

&space
&see	ng_repmgr, ng_rm_backup

&space
&mods
&owner(Scott Daniels)
&lgterms
&term	28 Jul 2006 (sd) : Its beginning of time. 
&term	19 Nov 2008 (sd) : Added error checking to prevent bad filenames if ng_tumbler cannot construct a filename.


&scd_end
------------------------------------------------------------------ */
