
# ======================================================================== v1.0/0a157 
#                                                         
#       This software is part of the AT&T Ningaui distribution 
#	
#       Copyright (c) 2001-2009 by AT&T Intellectual Property. All rights reserved
#	AT&T and the AT&T logo are trademarks of AT&T Intellectual Property.
#	
#       Ningaui software is licensed under the Common Public
#       License, Version 1.0  by AT&T Intellectual Property.
#                                                                      
#       A copy of the License is available at    
#       http://www.opensource.org/licenses/cpl1.0.txt             
#                                                                      
#       Information and Software Systems Research               
#       AT&T Labs 
#       Florham Park, NJ                            
#	
#	Send questions, comments via email to ningaui_support@research.att.com.
#	
#                                                                      
# ======================================================================== 0a229


# -----------------------------------------------------------------------------------------------------
#  We try to leave kpv's Makefiles alone. This is a wrapper that is invoked by 
#  the mkfile in .. and knows how to decend into kpv's environment to build and 
#  install things.  We also do some setup during precompile so that we do not 
#  maintain empty directories in CVS. 
#
#	Mod:
#		22 Mar 2005 (sd) : fixed hard reference to /ningaui
# 		20 Jul 2005 (sd) :  converted to mk   
#		13 Sep 2005 (sd) : need to move .a files to stlib after precompile
#		25 Aug 2006 (sd) : conversion to a releasable (export supporting) mkfile (HBD_RMH)
#		16 Feb 2007 (sd) : Added support to fingerprint various things in phongs stuff
#			added fix_up.ksh support to fix things after we install a new set of code (see
#			the README_NINGAUI file)
#		04 Jun 2009 (sd) : Fixed adding of copyright -- was barfing because cvs dirs were being 
#			copied from subdirs.
#
# -----------------------------------------------------------------------------------------------------

MKSHELL = `echo ${GLMK_SHELL:-ksh}`		

# these must be set before panoptic is pulled in
#
ALL = 
INSTALL =
SCDSRC = 

htmlcat = 

< $NG_SRC/panoptic.mk

GLMK_CC = $CC				# must ensure it is set for kpv stuff

gmake = `echo ${gmake:-gmake}`
#AST = /usr/common/ast			# expect this to be set by panoptic.mk
I_AST = $AST/include/ast
L_AST = $AST/lib
P = $PWD/bin:$PATH

#  we install headers into our include directory leaving OUT ast_common.h
headers = sfio.h

precompile:	prep_env fixup $fingerprint build_libs
	(
		cd lib
		for x in *.a
		do
			cp $x $NG_SRC/stlib
			ranlib $NG_SRC/stlib/$x 2>/dev/null || true
		done
	)
	(
		set -x 
		if [[ ! -d $NG_SRC/include/contrib ]]
		then
			mkdir $NG_SRC/include/contrib
		fi
		cd include
		if [[ ! -d $AST ]]		# if not using ast stuff, then we need everything (inc ast_common) generated by sfio
		then
			cp  *.h $NG_SRC/include/contrib 2>/dev/null || true
		else
			cp $headers $NG_SRC/include/contrib 2>/dev/null ||true 
		fi
	)

prep_env:VQ:
	set -x
	if [[ ! -d lib ]]
	then
		rm -f lib
		mkdir lib
	fi
	if [[ ! -d include ]]
	then
		rm -f include
		mkdir include 
	fi
	if [[ ! -d man ]]
	then
		rm -f man
		mkdir man
	fi

fingerprint:V:
	# if we are invoked by autobuild, it will have set the save option to record it in repmgr space
	ng_sm_fingerprint -v -l -C include/sm_fingerprint.h >fingerprint.data

# pc == mk precompile; a == mk all; i == mk install
pc_dirs = lib/sfio 
a_dirs = 
i_dirs = $pc_dirs 

# kpv makefiles install libraries into ./lib so we run install here, but not our install rule!
build_libs:V:
	set -x
	for x in $pc_dirs 
	do
		echo "======= kpv/mkfile: build_libs: $x"
		(
			export PATH=$P; 
			cd src/$x; 
			$gmake install
		)
	done

all:V: prep_env
	set -x
	for x in $a_dirs
	do
		echo "======= kpv/mkfile: all: $x"
		(
			export PATH=$P; 
			cd src/$x; 
			$gmake 
		)
	done

# run the install rule in each subdir, which will install into dirs below 
# this one (Phong's makefiles). Then install stuff from ./bin ./lib and ./include
# into our environment.

install:V:	prep_env build_libs
	set -x
	for x in $i_dirs 	# install into ./bin and into ./include
	do
		echo "======= kpv/mkfile: install: $x"
		(
			export PATH=$P; 
			cd src/$x; 
			$gmake install
		)
	done
	
	(
		cd bin
		for x in $(ls)
		do
			if [[ $x != iffe && ! -d $x ]]
			then
				ng_install $x $PKG_ROOT/bin/
			fi
		done
	)
	
	(cd include; cp *.h $NG_SRC/include; exit 0)
	(cd lib; cp -p -f *.a $NG_SRC/stlib; exit 0)

nuke: prep_env
	for x in $a_dirs $pc_dirs 
	do
		echo "========== kpv/mkfile: nuke: $x"
		(
			cd src/$x
			$gmake clean
		)
	done
	
	find . -name "*.o" -exec rm {} \;
	
	(cd include; rm -f *.h)
	(cd bin; rm -f vczip rtpbuild)		# dont remove * or we trash iffie
	(cd lib; rm -f *.a)

# run this after a new batch has been sucked in from kpv's home directory
# fixes things in his makefiles etc. Then adds the fingerprint include statment to 
# all source file basenames listed on the command line. 
fixup:V:
	./fix_up.ksh vczip.c rtpbuild.c
